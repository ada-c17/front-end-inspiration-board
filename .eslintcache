[{"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/index.js":"1","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/reportWebVitals.js":"2","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/App.js":"3","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Card.js":"4","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/BoardForm.js":"5","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/SelectedBoard.js":"6","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/CardForm.js":"7","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Board.js":"8","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/boards.js":"9","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/cards.js":"10","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/home.js":"11","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/about.js":"12","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Components/Header.js":"13","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/NotFound.js":"14","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/Selected.js":"15","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Components/Footer.js":"16"},{"size":535,"mtime":1656356670362,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1656356670365,"results":"19","hashOfConfig":"18"},{"size":7526,"mtime":1658160563374,"results":"20","hashOfConfig":"18"},{"size":1082,"mtime":1658020265088,"results":"21","hashOfConfig":"18"},{"size":1896,"mtime":1658102694750,"results":"22","hashOfConfig":"18"},{"size":827,"mtime":1658104119754,"results":"23","hashOfConfig":"18"},{"size":1411,"mtime":1658106168951,"results":"24","hashOfConfig":"18"},{"size":1201,"mtime":1658106389665,"results":"25","hashOfConfig":"18"},{"size":3029,"mtime":1658161554650,"results":"26","hashOfConfig":"18"},{"size":2174,"mtime":1658120821241,"results":"27","hashOfConfig":"18"},{"size":163,"mtime":1658099344135,"results":"28","hashOfConfig":"18"},{"size":166,"mtime":1658099362481,"results":"29","hashOfConfig":"18"},{"size":1078,"mtime":1658161842694,"results":"30","hashOfConfig":"18"},{"size":192,"mtime":1658102056733,"results":"31","hashOfConfig":"18"},{"size":1915,"mtime":1658170072663,"results":"32","hashOfConfig":"18"},{"size":275,"mtime":1658160610458,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"xclopr",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/index.js",[],["73","74"],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/reportWebVitals.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/App.js",["75","76","77","78","79","80","81","82","83","84","85"],"import Board from \"./Board.js\";\nimport React from \"react\";\nimport { useState, useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./dropdown.css\";\nimport Card from \"./Card.js\";\nimport BoardForm from \"./BoardForm.js\";\nimport SelectedBoard from \"./SelectedBoard.js\";\nimport CardForm from \"./CardForm.js\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route, Routes, useParams } from \"react-router-dom\";\nimport About from \"./Pages/about\";\nimport BoardsPage from \"./Pages/boards\";\nimport Home from \"./Pages/home\";\nimport CardsPage from \"./Pages/cards\";\nimport Header from \"./Components/Header\";\nimport \"./Styles/header.css\";\nimport NotFound from \"./Pages/NotFound\";\nimport Selected from \"./Pages/Selected\";\nimport Footer from \"./Components/Footer\";\nfunction App() {\n  //GET cards by board Id\n  const displayCards = async (id) => {\n    const response = await axios.get(\n      `http://orange-purple-inspo-board.herokuapp.com/cards/${id}`\n    );\n    setCards(response.data);\n  };\n  //setSelected Board by id\n  const getSelectedBoard = async (id) => {\n    const resp = await axios.get(\n      `https://orange-purple-inspo-board.herokuapp.com/boards/${id}`\n    );\n    console.log(resp.data.board);\n    setSelectedBoard(resp.data.board);\n  };\n\n  //submit forms\n  const addBoardData = (newBoard) => {\n    const newBoardData = [...boards];\n    const nextId = Math.max(...newBoardData.map((board) => board.id)) + 1;\n\n    newBoardData.push({\n      id: nextId,\n      title: newBoard.title,\n      owner: newBoard.owner,\n    });\n    setBoards(newBoardData);\n  };\n\n  //submit card forms\n  const addCardData = (newCard) => {\n    const newCardData = [...cards];\n    const nextId = Math.max(...newCardData.map((card) => card.id)) + 1;\n\n    newCardData.push({\n      id: nextId,\n      message: newCard.message,\n    });\n    setCards(newCardData);\n  };\n  //boards state\n  const [boards, setBoards] = useState([]);\n\n  //card state\n  const [cards, setCards] = useState([]);\n\n  //value\n  const [value, setValue] = useState(null);\n\n  //GET request boards\n  const getBoards = async () => {\n    const response = await axios.get(\n      \"https://orange-purple-inspo-board.herokuapp.com/boards\"\n    );\n    setBoards(response.data);\n  };\n\n  useEffect(() => {\n    getBoards();\n  }, []);\n\n  //like actions\n  const LIKE_ACTIONS = {\n    INCREMENT: \"increment\",\n    DECREMENT: \"decrement\",\n  };\n\n  const BOARD_ACTIONS = {\n    DELETE_BOARD: \"deleteBoard\",\n    ADD_CARD: \"addCard\",\n  };\n\n  //userReducer function to increment and decrement likesCount\n  const likesReducer = (likesState, action) => {\n    switch (action.type) {\n      case LIKE_ACTIONS.INCREMENT:\n        return { count: likesState.count + 1 };\n      case LIKE_ACTIONS.DECREMENT:\n        return { count: likesState.count - 1 };\n      default:\n        return likesState;\n    }\n  };\n  //increment and decrement likesCount\n  const [likesState, dispatch] = useReducer(likesReducer, { count: 0 });\n  //function to increment likesCount\n  const increment = () => {\n    dispatch({ type: LIKE_ACTIONS.INCREMENT });\n  };\n  //function to decrement likesCount\n  const decrement = () => {\n    dispatch({ type: LIKE_ACTIONS.DECREMENT });\n  };\n\n  //hide selected board\n  // const [selectedHidden, setSelectedHidden] = useState(true);\n  //hide CardForm\n  // const [cardFormHidden, setCardFormHidden] = useState(true);\n  //hide Card\n  // const [cardHidden, setCardHidden] = useState(true);\n\n  // const [boardForms, setBoardForms] = useState([]);\n\n  //update cardForm state and send to card to display\n  const [cardForms, setCardForms] = useState([]);\n\n  //adds form elements to dropdown in board component\n  //send this state to SelectedBoard\n  const [selectedBoard, setSelectedBoard] = useState({\n    title: \"\",\n    owner: \"\",\n  });\n\n  //updates selectedBoard state & adds selectedBoard to SelectedBoard component onClick\n  const boardChange = (e) => {\n    setSelectedBoard(e.target.value);\n    if (e.target.value) {\n      // setSelectedHidden(false);\n    }\n  };\n\n  //Board actions with useReducer\n  //selectedBooards actions\n  //delete board\n  //add card\n  const boardReducer = (selectedBoardState, action) => {\n    switch (action.type) {\n      // case BOARD_ACTIONS.ADD_CARD:\n      // return setCardFormHidden(false);\n      // case BOARD_ACTIONS.DELETE_BOARD:\n      //   return boards.filter((form) => form.id !== action.payload.id);\n      default:\n        return selectedBoardState;\n    }\n  };\n  const [selectedBoardState, selectedBoardDispatch] = useReducer(\n    boardReducer,\n    []\n  );\n  const deleteBoard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.DELETE_BOARD });\n  };\n\n  const addCard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.ADD_CARD });\n  };\n\n  return (\n    // <BrowserRouter>\n    /* <div>\n        <header className=\"Header\">\n          <h1>♥*♡∞:｡.｡ InspoBoard ｡.｡:∞♡*♥</h1>\n          <br />\n          <button>Ψ ♥* Dark Mode .｡:†</button>\n        </header>\n\n        <div className=\"App\">\n          <section>\n            <Board\n              getSelectedBoard={getSelectedBoard}\n              handleChange={boardChange}\n              options={boards}\n              prompt=\"Select Board\"\n              value={value}\n              onChange={(value) => setValue(value)}\n            />\n          </section>\n          <section>\n            <SelectedBoard\n              setSelectedBoard={setSelectedBoard}\n              board={selectedBoard}\n              selectedBoardState={selectedBoardState}\n              deleteBoard={deleteBoard}\n              addCard={addCard}\n            />\n          </section>\n          <section>\n            <BoardForm addBoardData={addBoardData} />\n          </section>\n          <section>\n            <Card\n              cards={cardForms}\n              increment={increment}\n              decrement={decrement}\n              likesState={likesState}\n            />\n          </section>\n          <section>\n            <CardForm\n              addCardData={addCardData}\n              boards={boards}\n              setBoards={setBoards}\n              cards={cards}\n            />\n          </section>\n        </div>\n      </div> */\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/boards/:boardID\"\n          element={\n            <Selected\n              setSelectedBoard={setSelectedBoard}\n              boards={selectedBoard}\n              selectedBoardState={selectedBoardState}\n              deleteBoard={deleteBoard}\n              addCard={addCard}\n              cards={cards}\n            />\n          }\n        />\n        <Route\n          path=\"/boards\"\n          element={\n            <BoardsPage\n              getSelectedBoard={getSelectedBoard}\n              handleChange={boardChange}\n              options={boards}\n              prompt=\"Select Board\"\n              value={value}\n              onChange={(value) => setValue(value)}\n              addBoardData={addBoardData}\n              displayCards={displayCards}\n            />\n          }\n        />\n        <Route\n          path=\"/cards\"\n          element={\n            <CardsPage\n              addCardData={addCardData}\n              options={boards}\n              boards={boards}\n              setBoards={setBoards}\n              cards={cards}\n            />\n          }\n        />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Card.js",["86","87"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst Card = ({ cards, increment, decrement, likesState }) => {\n  const [boardCards, setBoardCards] = useState({\n    message: \"\",\n  });\n  const getCards = async (id) => {\n    const response = await axios.get(\n      `https://orange-purple-inspo-board.herokuapp.com/cards/${id}`\n    );\n    setBoardCards(response.data);\n  };\n\n  //increment or decrement likes and display\n  const displayLikes = () => {\n    if (likesState.count < 1) {\n      increment();\n    } else {\n      decrement();\n    }\n  };\n  return (\n    <section className=\"form\">\n      <div>\n        Cards\n        {cards.map((card) => {\n          return (\n            <div>\n              <p>Note: {card.message}</p>\n              <button className=\"form-button\">Remove Card</button>\n              <br />\n              <button className=\"form-button\" onClick={displayLikes}>\n                Like\n              </button>\n              ♡{likesState.count}\n            </div>\n          );\n        })}\n      </div>\n    </section>\n  );\n};\n\nexport default Card;\n","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/BoardForm.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/SelectedBoard.js",["88","89","90"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nconst SelectedBoard = ({ board, deleteBoard, addCard }) => {\n  const removeBoard = () => {\n    deleteBoard();\n  };\n  // console.log(`board data: ${board}`);\n  const newCard = () => {\n    addCard();\n  };\n\n  return (\n    <section className=\"form\">\n      <h4>Selected Board</h4>\n      <div>{`Title: ${board.title} By: ${board.owner}`}</div>\n\n      <br />\n      <div className=\"board-buttons\">\n        <button className=\"form-button\">Remove Board</button>\n        <button className=\"form-button\" onClick={newCard}>\n          Add Cards\n        </button>\n      </div>\n    </section>\n  );\n};\n\n// SelectedBoard.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   owner: PropTypes.string.isRequired,\n// };\n\nexport default SelectedBoard;\n","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/CardForm.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Board.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/boards.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/cards.js",["91"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nconst CardsPage = ({ addCardData, options, setBoards, cards, boards }) => {\n  //search query state\n  const [query, setQuery] = useState(\"\");\n\n  const [cardFormData, setCardFormData] = useState({\n    message: \"\",\n  });\n\n  const onMessageChange = (e) => {\n    setCardFormData({\n      ...cardFormData,\n      message: e.target.value,\n    });\n  };\n\n  const onFormSubmit = (e, id, query) => {\n    e.preventDefault();\n    console.log(query);\n\n    // addCardData({\n    //   message: cardFormData.message,\n    // });\n    // postCard(id);\n    // setCardFormData({\n    //   message: \"\",\n    // });\n  };\n\n  const postCard = async (id) => {\n    const newBoard = await axios.post(\n      `https://orange-purple-inspo-board.herokuapp.com/cards/${id}`,\n      {\n        message: cardFormData.message,\n      }\n    );\n    setBoards(...boards, (cards.message = newBoard.message));\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"form\">\n        ꒰ა ♡ ໒꒱ Create Card ✧･ﾟ: *✧･ﾟ:* 𓆩♡𓆪\n        <form onSubmit={onFormSubmit}>\n          <label>Title</label>\n          <input\n            type=\"text\"\n            value={cardFormData.message}\n            onChange={onMessageChange}\n          />\n          <hr />\n          <input\n            type=\"text\"\n            value={query}\n            placeholder=\"Search Boards\"\n            onChange={(e) => setQuery(e.target.value)}\n          />\n          <hr />\n          <div className=\"dropdown\">\n            {options\n              .filter((option) => {\n                const searchTerm = query.toLowerCase();\n                const title = option.title.toLowerCase();\n\n                return searchTerm && title.includes(searchTerm);\n              })\n              .map((option) => {\n                return (\n                  <div className=\"dropdown-row\" key={option.id}>\n                    {option.title}\n                  </div>\n                );\n              })}\n          </div>\n          <input value=\"Add Card\" type=\"submit\" className=\"form-button\" />\n        </form>\n      </section>\n    </div>\n  );\n};\n\nexport default CardsPage;\n","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/home.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/about.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Components/Header.js",["92"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Tea from \"../Images/title_tea.png\";\nimport Hplant from \"../Images/hanging_plant.png\";\nimport Plant from \"../Images/plant.png\";\nimport Sleep from \"../Images/sleeping_cat.png\";\nimport Books from \"../Images/book-stack.png\";\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <h1>\n        {/* ♥*♥∞:｡.｡ InspoBoard ｡.｡:∞♡*♥ */}♥ InspoBoard ♥\n        {/* <img src=\"../Images/title_tea.png\" width={50} height={40} alt=\"\" /> */}\n      </h1>\n      <img src={Tea} width={80} height={80} alt=\"\" />\n      <nav className=\"links\">\n        <img src={Plant} width={70} height={70} alt=\"\" />\n        <img src={Books} width={70} height={70} alt=\"\" />\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/About\">About</Link>\n        <Link to=\"/boards\">Boards</Link>\n        <Link to=\"/cards\">Cards</Link>\n      </nav>\n      <img src={Sleep} width={80} height={80} alt=\"\" />\n      {/* <button>Ψ ♥* Dark Mode .｡:†</button> */}\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/NotFound.js",[],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Pages/Selected.js",["93","94","95","96","97"],"/Users/tyrahgullette/AdaC17/FullStack/front-end-inspiration-board/src/Components/Footer.js",["98"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Lavender from \"../Images/footer_lavender.png\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <img src={Lavender} width={80} height={80} alt=\"\" />\n    </footer>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"103","severity":1,"message":"107","line":6,"column":8,"nodeType":"105","messageId":"106","endLine":6,"endColumn":12},{"ruleId":"103","severity":1,"message":"108","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":17},{"ruleId":"103","severity":1,"message":"109","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":21},{"ruleId":"103","severity":1,"message":"110","line":9,"column":8,"nodeType":"105","messageId":"106","endLine":9,"endColumn":16},{"ruleId":"103","severity":1,"message":"111","line":11,"column":40,"nodeType":"105","messageId":"106","endLine":11,"endColumn":49},{"ruleId":"103","severity":1,"message":"112","line":106,"column":10,"nodeType":"105","messageId":"106","endLine":106,"endColumn":20},{"ruleId":"103","severity":1,"message":"113","line":108,"column":9,"nodeType":"105","messageId":"106","endLine":108,"endColumn":18},{"ruleId":"103","severity":1,"message":"114","line":112,"column":9,"nodeType":"105","messageId":"106","endLine":112,"endColumn":18},{"ruleId":"103","severity":1,"message":"115","line":126,"column":10,"nodeType":"105","messageId":"106","endLine":126,"endColumn":19},{"ruleId":"103","severity":1,"message":"116","line":126,"column":21,"nodeType":"105","messageId":"106","endLine":126,"endColumn":33},{"ruleId":"103","severity":1,"message":"117","line":5,"column":10,"nodeType":"105","messageId":"106","endLine":5,"endColumn":20},{"ruleId":"103","severity":1,"message":"118","line":8,"column":9,"nodeType":"105","messageId":"106","endLine":8,"endColumn":17},{"ruleId":"103","severity":1,"message":"119","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"120","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"121","line":6,"column":9,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},{"ruleId":"103","severity":1,"message":"122","line":32,"column":9,"nodeType":"105","messageId":"106","endLine":32,"endColumn":17},{"ruleId":"103","severity":1,"message":"123","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"119","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"120","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":13},{"ruleId":"103","severity":1,"message":"111","line":4,"column":10,"nodeType":"105","messageId":"106","endLine":4,"endColumn":19},{"ruleId":"103","severity":1,"message":"121","line":10,"column":9,"nodeType":"105","messageId":"106","endLine":10,"endColumn":20},{"ruleId":"103","severity":1,"message":"124","line":14,"column":9,"nodeType":"105","messageId":"106","endLine":14,"endColumn":16},{"ruleId":"103","severity":1,"message":"125","line":2,"column":10,"nodeType":"105","messageId":"106","endLine":2,"endColumn":14},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'Board' is defined but never used.","Identifier","unusedVar","'Card' is defined but never used.","'BoardForm' is defined but never used.","'SelectedBoard' is defined but never used.","'CardForm' is defined but never used.","'useParams' is defined but never used.","'likesState' is assigned a value but never used.","'increment' is assigned a value but never used.","'decrement' is assigned a value but never used.","'cardForms' is assigned a value but never used.","'setCardForms' is assigned a value but never used.","'boardCards' is assigned a value but never used.","'getCards' is assigned a value but never used.","'PropTypes' is defined but never used.","'axios' is defined but never used.","'removeBoard' is assigned a value but never used.","'postCard' is assigned a value but never used.","'Hplant' is defined but never used.","'newCard' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]