[{"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/index.js":"1","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/reportWebVitals.js":"2","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/App.js":"3","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/home.js":"4","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/NotFound.js":"5","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/about.js":"6","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/Selected.js":"7","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/boards.js":"8","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/cards.js":"9","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Components/ui/Header.js":"10","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Components/ui/Footer.js":"11"},{"size":535,"mtime":1656693266860,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1656693266861,"results":"14","hashOfConfig":"13"},{"size":5911,"mtime":1658333289961,"results":"15","hashOfConfig":"13"},{"size":664,"mtime":1658334526898,"results":"16","hashOfConfig":"13"},{"size":192,"mtime":1658161485235,"results":"17","hashOfConfig":"13"},{"size":544,"mtime":1658334586259,"results":"18","hashOfConfig":"13"},{"size":2189,"mtime":1658333289964,"results":"19","hashOfConfig":"13"},{"size":3588,"mtime":1658333289964,"results":"20","hashOfConfig":"13"},{"size":3284,"mtime":1658333289965,"results":"21","hashOfConfig":"13"},{"size":1426,"mtime":1658333289963,"results":"22","hashOfConfig":"13"},{"size":2353,"mtime":1658333289963,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1hcoq3x",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/index.js",[],["50","51"],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/reportWebVitals.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/App.js",["52"],"import React from \"react\";\nimport { useState, useReducer, useEffect } from \"react\";\nimport \"./App.css\";\nimport \"./dropdown.css\";\nimport axios from \"axios\";\nimport { BrowserRouter, Route, Routes, useParams } from \"react-router-dom\";\nimport About from \"./Pages/about\";\nimport BoardsPage from \"./Pages/boards\";\nimport Home from \"./Pages/home\";\nimport CardsPage from \"./Pages/cards\";\nimport Header from \"./Components/ui/Header\";\nimport \"./Styles/header.css\";\nimport NotFound from \"./Pages/NotFound\";\nimport Selected from \"./Pages/Selected\";\nimport Footer from \"./Components/ui/Footer\";\nfunction App() {\n  //GET cards by board Id\n  const displayCards = async (id) => {\n    const response = await axios.get(\n      `http://orange-purple-inspo-board.herokuapp.com/cards/${id}`\n    );\n    setCards(response.data);\n  };\n  //setSelected Board by id\n  const getSelectedBoard = async (id) => {\n    const resp = await axios.get(\n      `https://orange-purple-inspo-board.herokuapp.com/boards/${id}`\n    );\n    setSelectedBoard(resp.data.board);\n  };\n\n  const addCardToBoard = (newCard) => {\n    const newCardData = [...cards];\n    const nextId = Math.max(...newCardData.map((card) => card.id)) + 1;\n\n    newCardData.push({\n      id: nextId,\n      likes_count: 0,\n    });\n  };\n  //submit forms\n  const addBoardData = (newBoard) => {\n    const newBoardData = [...boards];\n    const nextId = Math.max(...newBoardData.map((board) => board.id)) + 1;\n\n    newBoardData.push({\n      id: nextId,\n      title: newBoard.title,\n      owner: newBoard.owner,\n    });\n    setBoards(newBoardData);\n  };\n\n  //submit card forms\n  const addCardData = (newCard) => {\n    const newCardData = [...cards];\n    const nextId = Math.max(...newCardData.map((card) => card.id)) + 1;\n\n    newCardData.push({\n      id: nextId,\n      message: newCard.message,\n    });\n    setCards(newCardData);\n  };\n  //boards state\n  const [boards, setBoards] = useState([]);\n\n  //card state\n  const [cards, setCards] = useState([]);\n\n  //value of selected board\n  const [value, setValue] = useState(null);\n\n  //GET request boards\n  const getBoards = async () => {\n    const response = await axios.get(\n      \"https://orange-purple-inspo-board.herokuapp.com/boards\"\n    );\n    setBoards(response.data);\n  };\n\n  useEffect(() => {\n    getBoards();\n  }, []);\n\n  const BOARD_ACTIONS = {\n    DELETE_BOARD: \"deleteBoard\",\n    ADD_CARD: \"addCard\",\n  };\n\n  //toggle card likes\n  const cardLikes = (id) => {\n    const newLikedData = cards.map((card) => {\n      if (card.id === id) {\n        if (card.likes_count === 0) {\n          return {\n            ...card,\n            likes_count: (card.likes_count = card.likes_count + 1),\n          };\n        } else if (card.likes_count === 1) {\n          return {\n            ...card,\n            likes_count: (card.likes_count = card.likes_count - 1),\n          };\n        } else {\n          return card;\n        }\n      } else {\n        return card;\n      }\n    });\n    //patch route here\n    setCards(newLikedData);\n  };\n\n  //adds form elements to dropdown in board component\n  //send this state to SelectedBoard\n  const [selectedBoard, setSelectedBoard] = useState({\n    title: \"\",\n    owner: \"\",\n  });\n\n  //updates selectedBoard state & adds selectedBoard to SelectedBoard component onClick\n  const boardChange = (e) => {\n    setSelectedBoard(e.target.value);\n    if (e.target.value) {\n      // setSelectedHidden(false);\n    }\n  };\n\n  //Board actions with useReducer\n  //selectedBooards actions\n  //delete board\n  //add card\n  const boardReducer = (selectedBoardState, action) => {\n    switch (action.type) {\n      // case BOARD_ACTIONS.ADD_CARD:\n      // return setCardFormHidden(false);\n      // case BOARD_ACTIONS.DELETE_BOARD:\n      //   return boards.filter((form) => form.id !== action.payload.id);\n      default:\n        return selectedBoardState;\n    }\n  };\n  const [selectedBoardState, selectedBoardDispatch] = useReducer(\n    boardReducer,\n    []\n  );\n  const deleteBoard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.DELETE_BOARD });\n  };\n\n  const addCard = () => {\n    selectedBoardDispatch({ type: BOARD_ACTIONS.ADD_CARD });\n  };\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/about\" element={<About />} />\n        <Route\n          path=\"/boards/:boardID\"\n          element={\n            <Selected\n              setSelectedBoard={setSelectedBoard}\n              boards={selectedBoard}\n              selectedBoardState={selectedBoardState}\n              deleteBoard={deleteBoard}\n              addCard={addCard}\n              cards={cards}\n              // increment={increment}\n              // decrement={decrement}\n              // toggle={toggle}\n              // likesState={likesState}\n              cardLikes={cardLikes}\n            />\n          }\n        />\n        <Route\n          path=\"/boards\"\n          element={\n            <BoardsPage\n              getSelectedBoard={getSelectedBoard}\n              handleChange={boardChange}\n              options={boards}\n              prompt=\"Select Board\"\n              value={value}\n              onChange={(value) => setValue(value)}\n              addBoardData={addBoardData}\n              displayCards={displayCards}\n            />\n          }\n        />\n        <Route\n          path=\"/cards\"\n          element={\n            <CardsPage\n              addCardData={addCardData}\n              options={boards}\n              boards={boards}\n              setBoards={setBoards}\n              cards={cards}\n              // postCardToBoard={postCardToBoard}\n              selectedBoard={selectedBoard}\n              clickedBoard={(value) => setValue(value)}\n              addCardToBoard={addCardToBoard}\n            />\n          }\n        />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/home.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/NotFound.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/about.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/Selected.js",["53","54","55","56","57"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { useParams, Link } from \"react-router-dom\";\nimport Heart from \"../Images/heart.png\";\nimport Exit from \"../Images/exit.png\";\nimport \"../Styles/cards.css\";\nconst Selected = ({\n  deleteBoard,\n  addCard,\n  boards,\n  cards,\n  toggle,\n  likesState,\n  increment,\n  decrement,\n  cardLikes,\n}) => {\n  // const { boardsID } = useParams();\n  const removeBoard = () => {\n    deleteBoard();\n  };\n\n  const newCard = () => {\n    addCard();\n  };\n\n  // const likeCard = (id) => {\n  //   console.log(likesState);\n  //   console.log(\"heart <3\");\n  //   console.log(id);\n  //   toggle(id);\n  // };\n\n  return (\n    <div className=\"App\">\n      <section>\n        <h4>Selected Board</h4>\n        <div>{`Title: ${boards.title} By: ${boards.owner}`}</div>\n        <hr />\n        {cards.map((card) => {\n          return (\n            // <div className=\"cards\">\n            <div className=\"singleCard\" key={card.id}>\n              <p className=\"exit\">\n                <img\n                  className=\"exit-class\"\n                  src={Exit}\n                  width={50}\n                  height={50}\n                  alt=\"\"\n                />\n              </p>\n              <h2 className=\"message\">Message: {card.message}</h2>\n              <h2 className=\"likes\">\n                <div className=\"heart\" onClick={() => cardLikes(card.id)}>\n                  <img\n                    className=\"heart-class\"\n                    src={Heart}\n                    width={50}\n                    height={50}\n                    alt=\"\"\n                  />\n                </div>\n                {card.likes_count}\n              </h2>\n            </div>\n            // </div>\n          );\n        })}\n        <br />\n        <div className=\"board-buttons\">\n          <button className=\"form-button\">Remove Board</button>\n          <button className=\"form-button\">Add Cards</button>\n        </div>\n      </section>\n      <Link to=\"/boards\">Boards Home</Link>\n    </div>\n  );\n};\n\n// SelectedBoard.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   owner: PropTypes.string.isRequired,\n// };\n\nexport default Selected;\n","/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/boards.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Pages/cards.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Components/ui/Header.js",[],"/Users/hillarysmith/ada/Developer/projects/inspiration_board/front-end-inspiration-board/src/Components/ui/Footer.js",["58"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Lavender from \"../../Images/footer_lavender.png\";\nimport \"../../Styles/animate.css\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n      <img\n        src={Lavender}\n        width={80}\n        height={80}\n        alt=\"\"\n        className=\"footer-image\"\n      />\n    </footer>\n  );\n};\n\nexport default Footer;\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":6,"column":40,"nodeType":"65","messageId":"66","endLine":6,"endColumn":49},{"ruleId":"63","severity":1,"message":"67","line":2,"column":8,"nodeType":"65","messageId":"66","endLine":2,"endColumn":17},{"ruleId":"63","severity":1,"message":"68","line":3,"column":8,"nodeType":"65","messageId":"66","endLine":3,"endColumn":13},{"ruleId":"63","severity":1,"message":"64","line":4,"column":10,"nodeType":"65","messageId":"66","endLine":4,"endColumn":19},{"ruleId":"63","severity":1,"message":"69","line":20,"column":9,"nodeType":"65","messageId":"66","endLine":20,"endColumn":20},{"ruleId":"63","severity":1,"message":"70","line":24,"column":9,"nodeType":"65","messageId":"66","endLine":24,"endColumn":16},{"ruleId":"63","severity":1,"message":"71","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","'axios' is defined but never used.","'removeBoard' is assigned a value but never used.","'newCard' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]